@model Alltech.BO.Models.RegisterViewModel

<!doctype html>
<html lang="en" class="no-js">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />    
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <asset:link rel="icon" href="favicon.ico" type="image/x-ico" />
</head>

<body>

    <div class="login-form">
        @using (Html.BeginForm("Register", "Security", FormMethod.Post, new { @class = "form-signin", role = "form", autocomplete = "off" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <label>Email</label>
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Password</label>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Confirm Password</label>
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <div class="checkbox">
                <label>
                    <input type="checkbox"> Agree the terms and policy
                </label>
            </div>
            <button type="submit" class="btn btn-primary btn-flat m-b-30 m-t-30">Register</button>

            <div class="register-link m-t-15 text-center">
                <p>@Html.ActionLink("Already have account ?", "Login", "Security")</p>
            </div>
            @Html.Raw(HttpUtility.HtmlDecode((Html.ValidationSummary(false, "", new { @class = "exception" })).ToHtmlString()))

        }
    </div>

</body>
</html>
